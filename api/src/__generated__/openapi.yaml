openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - App
  /owners/{ownername}:
    get:
      description: User情報を取得します。
      operationId: OwnersController_findOne
      parameters:
        - name: ownername
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      username:
                        type: string
                      email:
                        type: string
                        format: email
                      fullname:
                        type: string
                      avatarUrl:
                        oneOf:
                          - type: string
                            format: uri
                          - type: string
                            enum:
                              - ''
                    required:
                      - id
                      - email
                      - avatarUrl
                required:
                  - statusCode
                  - message
                  - data
      security: &ref_0
        - supabase-auth: []
      summary: OwnersController_findOne / User情報の取得
      tags: &ref_1
        - owners
    put:
      operationId: OwnersController_update
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ownerName:
                  type: string
                  minLength: 1
                username:
                  type: string
                  minLength: 1
                fullname:
                  type: string
                  minLength: 1
                email:
                  type: string
                  format: email
                avatarUrl:
                  oneOf:
                    - type: string
                      format: uri
                    - type: string
                      enum:
                        - ''
                readme:
                  type: string
              required:
                - ownerName
                - username
                - fullname
                - email
                - avatarUrl
                - readme
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_0
      summary: OwnersController_update / Owner情報の更新
      tags: *ref_1
  /owners/{ownername}/icon:
    get:
      operationId: OwnersController_getUserAvatar
      parameters:
        - name: ownername
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: object
                    properties:
                      avatarUrl:
                        oneOf:
                          - type: string
                            format: uri
                          - type: string
                            enum:
                              - ''
                    required:
                      - avatarUrl
                required:
                  - statusCode
                  - message
                  - data
      security: *ref_0
      summary: OwnersController_getUserAvatar / UserのアバターURLを取得
      tags: *ref_1
    put:
      operationId: OwnersController_uploadUserIcon
      parameters:
        - name: ownername
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file: {}
              required:
                - file
      responses:
        '200':
          description: アップロード成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_0
      summary: OwnersController_uploadUserIcon / アイコン画像をアップロード
      tags: *ref_1
  /owners/{ownername}/managepin:
    put:
      operationId: OwnersController_updatePin
      parameters:
        - name: ownername
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectId:
                  type: string
                  format: uuid
                pined:
                  type: boolean
              required:
                - projectId
                - pined
      responses:
        '200':
          description: ピン状態の更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_0
      summary: OwnersController_updatePin / Projectのピン状態を更新
      tags: *ref_1
    delete:
      operationId: OwnersController_leaveProject
      parameters:
        - name: ownername
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectId:
                  type: string
                  format: uuid
              required:
                - projectId
      responses:
        '200':
          description: 脱退成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_0
      summary: OwnersController_leaveProject / Projectから脱退
      tags: *ref_1
  /owners/{ownername}/orgdisplay:
    put:
      operationId: OwnersController_updateOrgDisplay
      parameters:
        - name: ownername
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orgId:
                  type: string
                  format: uuid
                display:
                  type: boolean
              required:
                - orgId
                - display
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_0
      summary: OwnersController_updateOrgDisplay / 組織の表示・非表示の更新
      tags: *ref_1
    delete:
      operationId: OwnersController_leaveOrg
      parameters:
        - name: ownername
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orgId:
                  type: string
                  format: uuid
              required:
                - orgId
      responses:
        '200':
          description: 脱退成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_0
      summary: OwnersController_leaveOrg / 組織から脱退
      tags: *ref_1
  /owners/{ownername}/projects/{project}:
    delete:
      description: Projectを削除します
      operationId: ProjectsController_remove
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            type: string
      responses:
        '200':
          description: 削除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: &ref_2
        - supabase-auth: []
      summary: ProjectsController_remove / Projectの削除
      tags: &ref_3
        - projects
  /owners/{ownername}/projects/{project}/access:
    get:
      description: 認証しているUserのProjectのアクセス権限を取得します
      operationId: ProjectsController_getAccess
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            type: string
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: object
                    properties:
                      role:
                        type: string
                        enum:
                          - admin
                          - editor
                          - viewer
                          - invited
                          - invalid
                    required:
                      - role
                required:
                  - statusCode
                  - message
                  - data
      security: *ref_2
      summary: ProjectsController_getAccess / Projectのアクセス権限の取得
      tags: *ref_3
    put:
      description: Projectのアクセス権限を更新します
      operationId: ProjectsController_updateAccess
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            type: string
      requestBody:
        required: true
        description: 更新するアクセス権限の情報
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  format: uuid
                role:
                  type: string
                  enum:
                    - admin
                    - editor
                    - viewer
                    - invited
                    - invalid
              required:
                - userId
                - role
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_2
      summary: ProjectsController_updateAccess / Projectのアクセス権限の更新
      tags: *ref_3
    delete:
      description: Projectのアクセス権限を削除します
      operationId: ProjectsController_removeAccess
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            type: string
      requestBody:
        required: true
        description: アクセス削除するUserの情報
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  format: uuid
              required:
                - userId
      responses:
        '200':
          description: 削除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_2
      summary: ProjectsController_removeAccess / Projectのアクセス権限の削除
      tags: *ref_3
  /owners/{ownername}/projects/{project}/icon:
    get:
      description: Projectのアイコンを取得します
      operationId: ProjectsController_getIcon
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            type: string
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                description: プロジェクトアイコン取得レスポンス
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: object
                    properties:
                      iconUrl:
                        type: string
                    required:
                      - iconUrl
                required:
                  - statusCode
                  - message
                  - data
      security: *ref_2
      summary: ProjectsController_getIcon / Projectのアイコンの取得
      tags: *ref_3
    put:
      description: Projectのアイコンを更新します
      operationId: ProjectsController_updateIcon
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file: {}
              required:
                - file
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_2
      summary: ProjectsController_updateIcon / Projectのアイコンの更新
      tags: *ref_3
  /owners/{ownername}/projects/{project}/name:
    put:
      description: Project名を更新します
      operationId: ProjectsController_updateName
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            type: string
      requestBody:
        required: true
        description: 更新するProject名
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_2
      summary: ProjectsController_updateName / Project名の更新
      tags: *ref_3
  /owners/{ownername}/projects/{project}/tags:
    post:
      description: Projectにタグを追加します
      operationId: ProjectsController_addTag
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            type: string
      requestBody:
        required: true
        description: 追加するタグの情報
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                color:
                  type: string
                description:
                  type: string
              required:
                - name
                - color
                - description
      responses:
        '200':
          description: 追加成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_2
      summary: ProjectsController_addTag / Projectのタグの追加
      tags: *ref_3
  /owners/{ownername}/projects/{project}/tags/{tagId}:
    put:
      description: Projectのタグを更新します
      operationId: ProjectsController_updateTag
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            type: string
        - name: tagId
          required: true
          in: path
          description: タグID
          schema:
            type: string
      requestBody:
        required: true
        description: 更新するタグの情報
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                color:
                  type: string
                description:
                  type: string
              required:
                - name
                - color
                - description
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_2
      summary: ProjectsController_updateTag / Projectのタグの更新
      tags: *ref_3
    delete:
      description: Projectのタグを削除します
      operationId: ProjectsController_removeTag
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            type: string
        - name: tagId
          required: true
          in: path
          description: タグID
          schema:
            type: string
      responses:
        '200':
          description: 削除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_2
      summary: ProjectsController_removeTag / Projectのタグの削除
      tags: *ref_3
  /owners/{ownername}/projects/{project}/settings/access:
    post:
      description: ProjectにUserを招待します
      operationId: ProjectsController_inviteUser
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            type: string
      requestBody:
        required: true
        description: 招待するUserの情報
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                  format: email
              required:
                - identifier
      responses:
        '200':
          description: 招待成功
          content:
            application/json:
              schema:
                description: プロジェクト招待レスポンス
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: object
                    properties:
                      result:
                        type: string
                        enum:
                          - succeeded
                          - failed
                          - already invited
                    required:
                      - result
                required:
                  - statusCode
                  - message
                  - data
      security: *ref_2
      summary: ProjectsController_inviteUser / Projectへの招待
      tags: *ref_3
    get:
      description: Projectのロール付きメンバーを取得します
      operationId: ProjectsController_getUserWithRole
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            type: string
        - name: username
          required: true
          in: query
          description: User名
          schema:
            type: string
        - name: user_num
          required: false
          in: query
          description: User番号
          schema:
            type: number
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                description: プロジェクトユーザー一覧（ロール付き）
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        role:
                          type: string
                          enum:
                            - admin
                            - editor
                            - viewer
                            - invited
                            - invalid
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        avatarUrl:
                          type: string
                      required:
                        - role
                        - id
                        - name
                        - avatarUrl
                required:
                  - statusCode
                  - message
                  - data
      security: *ref_2
      summary: ProjectsController_getUserWithRole / Projectのロール付きメンバーの取得
      tags: *ref_3
  /owners/{ownername}/projects/{project}/topics:
    post:
      description: Topicを新規作成します
      operationId: TopicsController_createTopic
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
      requestBody:
        required: true
        description: Topicの情報
        content:
          application/json:
            schema:
              type: object
              properties:
                frameId:
                  type: string
                  format: uuid
                title:
                  type: string
                  minLength: 1
                participants:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      username:
                        type: string
                      email:
                        type: string
                        format: email
                      fullname:
                        type: string
                      avatarUrl:
                        oneOf:
                          - type: string
                            format: uri
                          - type: string
                            enum:
                              - ''
                    required:
                      - id
                      - email
                      - avatarUrl
                state:
                  type: string
                  minLength: 1
                createdBy:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    username:
                      type: string
                    email:
                      type: string
                      format: email
                    fullname:
                      type: string
                    avatarUrl:
                      oneOf:
                        - type: string
                          format: uri
                        - type: string
                          enum:
                            - ''
                  required:
                    - id
                    - email
                    - avatarUrl
                reviewer:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    username:
                      type: string
                    email:
                      type: string
                      format: email
                    fullname:
                      type: string
                    avatarUrl:
                      oneOf:
                        - type: string
                          format: uri
                        - type: string
                          enum:
                            - ''
                  required:
                    - id
                    - email
                    - avatarUrl
                assignee:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    username:
                      type: string
                    email:
                      type: string
                      format: email
                    fullname:
                      type: string
                    avatarUrl:
                      oneOf:
                        - type: string
                          format: uri
                        - type: string
                          enum:
                            - ''
                  required:
                    - id
                    - email
                    - avatarUrl
                tags:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      color:
                        type: string
                      description:
                        type: string
                    required:
                      - name
                      - color
                      - description
                createdAt:
                  type: number
                timeline:
                  type: object
                  properties:
                    activities:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                          postedBy:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                              username:
                                type: string
                              email:
                                type: string
                                format: email
                              fullname:
                                type: string
                              avatarUrl:
                                oneOf:
                                  - type: string
                                    format: uri
                                  - type: string
                                    enum:
                                      - ''
                            required:
                              - id
                              - email
                              - avatarUrl
                          content:
                            oneOf:
                              - oneOf:
                                  - type: string
                                  - type: number
                                  - type: boolean
                                  - {}
                              - type: array
                                items: {}
                              - type: object
                                additionalProperties: {}
                          link:
                            type: string
                          createdAt:
                            type: number
                          replies:
                            type: array
                            items:
                              type: object
                              properties:
                                postedBy:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      format: uuid
                                    username:
                                      type: string
                                    email:
                                      type: string
                                      format: email
                                    fullname:
                                      type: string
                                    avatarUrl:
                                      oneOf:
                                        - type: string
                                          format: uri
                                        - type: string
                                          enum:
                                            - ''
                                  required:
                                    - id
                                    - email
                                    - avatarUrl
                                link:
                                  type: string
                                content: {}
                                createdAt:
                                  type: number
                              required:
                                - postedBy
                                - link
                                - content
                                - createdAt
                        required:
                          - type
                          - postedBy
                          - content
                          - link
                          - createdAt
                          - replies
                  required:
                    - activities
                attributes:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      type:
                        type: string
                      name:
                        type: string
                      frameId:
                        type: string
                        format: uuid
                      content:
                        type: string
                    required:
                      - id
                      - type
                      - name
                      - frameId
                      - content
                document: {}
              required:
                - title
                - participants
                - state
                - createdBy
                - reviewer
                - assignee
                - tags
                - createdAt
                - timeline
                - attributes
                - document
            examples:
              default:
                value:
                  frameId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  title: これはタイトル
                  participants:
                    - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      email: user@example.com
                    - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      email: user@example.com
                  state: open
                  createdBy:
                    id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    email: user@example.com
                  reviewer:
                    id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    email: user@example.com
                  assignee:
                    id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    email: user@example.com
                  tags:
                    - name: tag1
                      color: '#ff0000'
                      description: description1
                    - name: tag2
                      color: '#00ff00'
                      description: description2
                  createdAt: 1234567890
                  timeline:
                    activities:
                      - type: comment
                        postedBy:
                          id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                          email: user@example.com
                        content:
                          type: doc
                          content: []
                        link: http://example.com
                        createdAt: 1234567890
                        replies:
                          - postedBy:
                              id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                              email: user@example.com
                            link: http://example.com
                            content:
                              type: doc
                              content: []
                            createdAt: 1234567890
                  attributes:
                    - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      type: text
                      name: attribute1
                      frameId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      content: content1
                  document:
                    type: doc
                    content: []
      responses:
        '200':
          description: Topicの作成に成功しました
          content:
            application/json:
              schema:
                description: トピック作成レスポンス
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: object
                    properties:
                      topicId:
                        type: string
                        format: uuid
                    required:
                      - topicId
                required:
                  - statusCode
                  - message
                  - data
      security: &ref_4
        - supabase-auth: []
      summary: TopicsController_createTopic / Topic新規作成
      tags: &ref_5
        - topics
    get:
      description: Topicの一覧を取得します
      operationId: TopicsController_getTopicList
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: page
          required: false
          in: query
          description: ページ番号
          schema:
            type: number
        - name: limit
          required: false
          in: query
          description: 1ページあたりの件数
          schema:
            type: number
        - name: state
          required: false
          in: query
          description: Topicの状態
          schema:
            type: string
        - name: frameName
          required: false
          in: query
          description: Frame名
          schema:
            type: string
        - name: conflict
          required: false
          in: query
          description: コンフリクトの有無
          schema:
            type: boolean
        - name: tagName
          required: false
          in: query
          description: タグ名
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: 検索キーワード
          schema:
            type: string
        - name: sort
          required: false
          in: query
          description: ソート順
          schema:
            type: string
      responses:
        '200':
          description: Topicの一覧取得に成功しました
          content:
            application/json:
              schema:
                description: トピック一覧取得レスポンス
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        topicId:
                          type: string
                          format: uuid
                        topicNum:
                          type: number
                        state:
                          type: string
                          enum:
                            - open
                            - closed
                        title:
                          type: string
                        frameId:
                          type: string
                          format: uuid
                        frameName:
                          type: string
                        frameDescription:
                          type: string
                        frameIcon:
                          type: string
                        createdBy:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            username:
                              type: string
                            email:
                              type: string
                              format: email
                            fullname:
                              type: string
                            avatarUrl:
                              oneOf:
                                - type: string
                                  format: uri
                                - type: string
                                  enum:
                                    - ''
                          required:
                            - id
                            - email
                            - avatarUrl
                        createdAt:
                          type: string
                        tags:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              color:
                                type: string
                              description:
                                type: string
                              id:
                                type: string
                                format: uuid
                            required:
                              - name
                              - color
                              - description
                        participants:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                              username:
                                type: string
                              email:
                                type: string
                                format: email
                              fullname:
                                type: string
                              avatarUrl:
                                oneOf:
                                  - type: string
                                    format: uri
                                  - type: string
                                    enum:
                                      - ''
                            required:
                              - id
                              - email
                              - avatarUrl
                        commentNum:
                          type: number
                        attributes:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                              type:
                                type: string
                              name:
                                type: string
                              frameId:
                                type: string
                                format: uuid
                              content:
                                type: string
                            required:
                              - id
                              - type
                              - name
                              - frameId
                              - content
                        isConflicting:
                          type: boolean
                        suggestionId:
                          type: string
                          format: uuid
                      required:
                        - topicId
                        - topicNum
                        - state
                        - title
                        - frameId
                        - frameName
                        - frameDescription
                        - frameIcon
                        - createdBy
                        - createdAt
                        - tags
                        - participants
                        - commentNum
                        - attributes
                        - isConflicting
                required:
                  - statusCode
                  - message
                  - data
      security: *ref_4
      summary: TopicsController_getTopicList / Topic一覧取得
      tags: *ref_5
  /owners/{ownername}/projects/{project}/topics/{topicId}:
    get:
      description: Topicの詳細を取得します
      operationId: TopicsController_getTopicDetail
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      responses:
        '200':
          description: Topicの詳細取得に成功しました
          content:
            application/json:
              schema:
                description: トピック詳細取得レスポンス
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      title:
                        type: string
                      topicNum:
                        type: number
                      state:
                        type: string
                      createdBy:
                        type: string
                      createdAt:
                        type: string
                      frame:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          name:
                            type: string
                          description:
                            type: string
                          createdBy:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                              username:
                                type: string
                              email:
                                type: string
                                format: email
                              fullname:
                                type: string
                              avatarUrl:
                                oneOf:
                                  - type: string
                                    format: uri
                                  - type: string
                                    enum:
                                      - ''
                            required:
                              - id
                              - email
                              - avatarUrl
                          createdAt:
                            type: string
                          attributes:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                type:
                                  type: string
                                description:
                                  type: string
                                creatorId:
                                  type: string
                                  format: uuid
                                createdAt:
                                  type: string
                              required:
                                - id
                                - name
                                - type
                                - description
                                - creatorId
                                - createdAt
                          templates:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                contentJson:
                                  oneOf:
                                    - oneOf:
                                        - type: string
                                        - type: number
                                        - type: boolean
                                        - {}
                                    - type: array
                                      items: {}
                                    - type: object
                                      additionalProperties: {}
                                creatorId:
                                  type: string
                                  format: uuid
                                createdAt:
                                  type: string
                              required:
                                - id
                                - name
                                - contentJson
                                - creatorId
                                - createdAt
                        required:
                          - id
                          - name
                          - description
                          - createdBy
                          - createdAt
                          - attributes
                          - templates
                      tags:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            color:
                              type: string
                            description:
                              type: string
                            id:
                              type: string
                              format: uuid
                          required:
                            - name
                            - color
                            - description
                      participants:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            username:
                              type: string
                            email:
                              type: string
                              format: email
                            fullname:
                              type: string
                            avatarUrl:
                              oneOf:
                                - type: string
                                  format: uri
                                - type: string
                                  enum:
                                    - ''
                          required:
                            - id
                            - email
                            - avatarUrl
                      activities:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            icon:
                              type: string
                            postedBy:
                              type: string
                            postedAt:
                              type: string
                            contentJson: {}
                            type:
                              type: string
                            suggestionId:
                              type: string
                              format: uuid
                              nullable: true
                            replies:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    format: uuid
                                  parentId:
                                    type: string
                                    format: uuid
                                  icon:
                                    type: string
                                  postedBy:
                                    type: string
                                  postedAt:
                                    type: string
                                  contentJson: {}
                                required:
                                  - id
                                  - parentId
                                  - icon
                                  - postedBy
                                  - postedAt
                                  - contentJson
                          required:
                            - id
                            - icon
                            - postedBy
                            - postedAt
                            - contentJson
                            - type
                            - suggestionId
                            - replies
                      contexts:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            description:
                              type: string
                            type:
                              type: string
                            topicId:
                              type: string
                              format: uuid
                            topicNum:
                              type: number
                            topicName:
                              type: string
                            suggestionId:
                              type: string
                              format: uuid
                          required:
                            - id
                            - name
                            - description
                            - type
                            - topicId
                            - topicNum
                            - topicName
                      attributes:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            type:
                              type: string
                            content:
                              type: string
                            creatorId:
                              type: string
                              format: uuid
                            createdAt:
                              type: string
                            framePropertyId:
                              type: string
                              format: uuid
                          required:
                            - id
                            - name
                            - type
                            - content
                            - creatorId
                            - createdAt
                            - framePropertyId
                      documnets:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            contentJson: {}
                            contentHex:
                              type: string
                            version:
                              type: number
                          required:
                            - id
                            - contentJson
                            - contentHex
                            - version
                    required:
                      - id
                      - title
                      - topicNum
                      - state
                      - createdBy
                      - createdAt
                      - tags
                      - participants
                      - activities
                      - contexts
                      - attributes
                      - documnets
                required:
                  - statusCode
                  - message
                  - data
      security: *ref_4
      summary: TopicsController_getTopicDetail / Topic詳細取得
      tags: *ref_5
    delete:
      description: Topicを削除します
      operationId: TopicsController_deleteTopic
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      responses:
        '200':
          description: Topicの削除に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_4
      summary: TopicsController_deleteTopic / Topic削除
      tags: *ref_5
  /owners/{ownername}/projects/{project}/topics/{topicId}/frame:
    put:
      description: TopicのFrameを変更します
      operationId: TopicsController_updateTopicFrame
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: 新たなFrameID
        content:
          application/json:
            schema:
              type: object
              properties:
                frameId:
                  type: string
                  format: uuid
              required:
                - frameId
      responses:
        '200':
          description: TopicのFrame変更に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_4
      summary: TopicsController_updateTopicFrame / TopicのFrame変更
      tags: *ref_5
  /owners/{ownername}/projects/{project}/topics/{topicId}/participants:
    put:
      description: Topicの参加者を変更します
      operationId: TopicsController_updateTopicParticipants
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: 新たなTopicの参加者ID一覧
        content:
          application/json:
            schema:
              type: object
              properties:
                participantsIds:
                  type: array
                  items:
                    type: string
                    format: uuid
                    minLength: 1
              required:
                - participantsIds
      responses:
        '200':
          description: Topicの参加者変更に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_4
      summary: TopicsController_updateTopicParticipants / Topicの参加者変更
      tags: *ref_5
  /owners/{ownername}/projects/{project}/topics/{topicId}/state:
    put:
      description: Topicの状態を変更します
      operationId: TopicsController_updateTopicState
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: 新たなTopicの状態
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  minLength: 1
              required:
                - state
      responses:
        '200':
          description: Topicの状態変更に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_4
      summary: TopicsController_updateTopicState / Topicの状態変更
      tags: *ref_5
  /owners/{ownername}/projects/{project}/topics/{topicId}/tags:
    put:
      description: Topicのタグを変更します
      operationId: TopicsController_updateTopicTags
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: 新たなTopicのタグID一覧
        content:
          application/json:
            schema:
              type: object
              properties:
                tagsIds:
                  type: array
                  items:
                    type: string
                    format: uuid
                    minLength: 1
              required:
                - tagsIds
      responses:
        '200':
          description: Topicのタグ変更に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_4
      summary: TopicsController_updateTopicTags / Topicのタグ変更
      tags: *ref_5
  /owners/{ownername}/projects/{project}/topics/{topicId}/title:
    put:
      description: Topicのタイトルを変更します
      operationId: TopicsController_updateTopicTitle
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: 新たなタイトル
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  minLength: 1
              required:
                - title
      responses:
        '200':
          description: Topicのタイトル変更に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_4
      summary: TopicsController_updateTopicTitle / Topicのタイトル変更
      tags: *ref_5
  /owners/{ownername}/projects/{project}/topics/{topicId}/agent/question:
    post:
      description: Topicの質問を生成します
      operationId: TopicsController_generateTopicQuestion
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: 質問ポスト
        content:
          application/json:
            schema:
              type: object
              properties:
                activityId:
                  type: string
                  format: uuid
              required:
                - activityId
      responses:
        '200':
          description: Topicの質問生成に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_4
      summary: TopicsController_generateTopicQuestion / Topicの質問生成
      tags: *ref_5
  /owners/{ownername}/projects/{project}/topics/{topicId}/contexts:
    get:
      description: TopicのContextを取得します
      operationId: TopicsController_getTopicContexts
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      responses:
        '200':
          description: TopicのContext取得に成功しました
          content:
            application/json:
              schema:
                description: トピックコンテキスト一覧取得レスポンス
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        topicContextId:
                          type: string
                          format: uuid
                        name:
                          type: string
                        description:
                          type: string
                        type:
                          type: string
                        opponentTopicId:
                          type: string
                          format: uuid
                        opponentTopicName:
                          type: string
                        opponentTopicNum:
                          type: number
                      required:
                        - topicContextId
                        - name
                        - description
                        - type
                        - opponentTopicId
                        - opponentTopicName
                        - opponentTopicNum
                required:
                  - statusCode
                  - message
                  - data
      security: *ref_4
      summary: TopicsController_getTopicContexts / TopicのContext取得
      tags: *ref_5
    put:
      description: TopicのContextを変更します
      operationId: TopicsController_updateTopicContexts
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: TopicContextの更新情報
        content:
          application/json:
            schema:
              type: object
              properties:
                topicId:
                  type: string
                  format: uuid
                contexts:
                  type: array
                  items:
                    type: object
                    properties:
                      topicContextId:
                        type: string
                        format: uuid
                      name:
                        type: string
                      description:
                        type: string
                      type:
                        type: string
                      opponentTopicId:
                        type: string
                        format: uuid
                    required:
                      - topicContextId
                      - name
                      - description
                      - type
                      - opponentTopicId
              required:
                - topicId
                - contexts
      responses:
        '200':
          description: TopicのContext変更に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_4
      summary: TopicsController_updateTopicContexts / TopicのContext変更
      tags: *ref_5
  /owners/{ownername}/projects/{project}/topics/{topicId}/contexts/{contextId}:
    get:
      description: TopicのContextの詳細を取得します
      operationId: TopicsController_getTopicContextDetail
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
        - name: contextId
          required: true
          in: path
          description: TopicContextID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      responses:
        '200':
          description: TopicのContext詳細取得に成功しました
          content:
            application/json:
              schema:
                description: トピックコンテキスト詳細取得レスポンス
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: object
                    properties:
                      topicContextId:
                        type: string
                        format: uuid
                      name:
                        type: string
                      description:
                        type: string
                      type:
                        type: string
                      opponentTopicId:
                        type: string
                        format: uuid
                      opponentTopicName:
                        type: string
                      opponentTopicNum:
                        type: number
                    required:
                      - topicContextId
                      - name
                      - description
                      - type
                      - opponentTopicId
                      - opponentTopicName
                      - opponentTopicNum
                required:
                  - statusCode
                  - message
                  - data
      security: *ref_4
      summary: TopicsController_getTopicContextDetail / TopicのContext詳細取得
      tags: *ref_5
    post:
      description: TopicのContextを作成します
      operationId: TopicsController_createTopicContext
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
        - name: contextId
          required: false
          in: path
          description: 新しいTopicContextID（なければ作成）
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: TopicContextの情報
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                type:
                  type: string
                opponentTopicId:
                  type: string
                  format: uuid
              required:
                - name
                - description
                - type
                - opponentTopicId
      responses:
        '200':
          description: TopicのContext作成に成功しました
          content:
            application/json:
              schema:
                description: トピックコンテキスト作成レスポンス
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: object
                    properties:
                      topicContextId:
                        type: string
                        format: uuid
                    required:
                      - topicContextId
                required:
                  - statusCode
                  - message
                  - data
      security: *ref_4
      summary: TopicsController_createTopicContext / TopicのContext作成
      tags: *ref_5
    put:
      description: TopicのContextを更新します
      operationId: TopicsController_updateTopicContext
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
        - name: contextId
          required: true
          in: path
          description: TopicContextID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: TopicContextの情報
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                type:
                  type: string
                opponentTopicId:
                  type: string
                  format: uuid
              required:
                - name
                - description
                - type
                - opponentTopicId
      responses:
        '200':
          description: TopicのContext更新に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_4
      summary: TopicsController_updateTopicContext / TopicのContext更新
      tags: *ref_5
    delete:
      description: TopicのContextを削除します
      operationId: TopicsController_deleteTopicContext
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
        - name: contextId
          required: true
          in: path
          description: TopicContextID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      responses:
        '200':
          description: TopicのContext削除に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_4
      summary: TopicsController_deleteTopicContext / TopicのContext削除
      tags: *ref_5
  /owners/{ownername}/projects/{project}/topics/{topicId}/attributes:
    put:
      description: TopicのAttributesを変更します
      operationId: TopicsController_updateTopicAttributes
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: TopicAttributesの更新情報
        content:
          application/json:
            schema:
              type: object
              properties:
                attributes:
                  type: array
                  items:
                    type: object
                    properties:
                      frameAttributeId:
                        type: string
                        format: uuid
                      content:
                        oneOf:
                          - oneOf:
                              - type: string
                              - type: number
                              - type: boolean
                              - {}
                          - type: array
                            items: {}
                          - type: object
                            additionalProperties: {}
                    required:
                      - frameAttributeId
                      - content
              required:
                - attributes
            examples:
              default:
                value:
                  attributes:
                    - frameAttributeId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      content:
                        type: doc
                    - frameAttributeId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      content:
                        type: doc
      responses:
        '200':
          description: TopicのAttributes変更に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_4
      summary: TopicsController_updateTopicAttributes / TopicのAttributes変更
      tags: *ref_5
  /owners/{ownername}/projects/{project}/topics/{topicId}/timeline/comment:
    post:
      description: Topicにコメントを投稿します
      operationId: TopicsController_postTopicComment
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: コメントポスト
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  oneOf:
                    - oneOf:
                        - type: string
                        - type: number
                        - type: boolean
                        - {}
                    - type: array
                      items: {}
                    - type: object
                      additionalProperties: {}
              required:
                - content
            examples:
              default:
                value:
                  content:
                    type: doc
                    content:
                      - type: paragraph
                        content:
                          - type: text
                            text: これはコメントです
      responses:
        '200':
          description: Topicのコメント投稿に成功しました
          content:
            application/json:
              schema:
                description: タイムラインコメント作成レスポンス
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: object
                    properties:
                      activityId:
                        type: string
                        format: uuid
                    required:
                      - activityId
                required:
                  - statusCode
                  - message
                  - data
      security: *ref_4
      summary: TopicsController_postTopicComment / Topicのコメント投稿
      tags: *ref_5
  /owners/{ownername}/projects/{project}/topics/{topicId}/timeline/comment/{activityId}:
    put:
      description: Topicのコメントを更新します
      operationId: TopicsController_updateTopicComment
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
        - name: activityId
          required: true
          in: path
          description: TimelineCommentID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: コメントポスト
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  oneOf:
                    - oneOf:
                        - type: string
                        - type: number
                        - type: boolean
                        - {}
                    - type: array
                      items: {}
                    - type: object
                      additionalProperties: {}
              required:
                - content
            examples:
              default:
                value:
                  content:
                    type: doc
                    content:
                      - type: paragraph
                        content:
                          - type: text
                            text: これはコメントです
      responses:
        '200':
          description: Topicのコメント更新に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_4
      summary: TopicsController_updateTopicComment / Topicのコメント更新
      tags: *ref_5
    delete:
      description: Topicのコメントを削除します
      operationId: TopicsController_deleteTopicComment
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
        - name: activityId
          required: true
          in: path
          description: TimelineCommentID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      responses:
        '200':
          description: Topicのコメント削除に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_4
      summary: TopicsController_deleteTopicComment / Topicのコメント削除
      tags: *ref_5
  /owners/{ownername}/projects/{project}/topics/{topicId}/timeline/reply:
    post:
      description: Topicのコメントに返信します
      operationId: TopicsController_postTopicCommentReply
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: コメントポスト
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  oneOf:
                    - oneOf:
                        - type: string
                        - type: number
                        - type: boolean
                        - {}
                    - type: array
                      items: {}
                    - type: object
                      additionalProperties: {}
              required:
                - content
            examples:
              default:
                value:
                  content:
                    type: doc
                    content:
                      - type: paragraph
                        content:
                          - type: text
                            text: これは返信です
      responses:
        '200':
          description: Topicのコメントに返信に成功しました
          content:
            application/json:
              schema:
                description: タイムラインリプライ作成レスポンス
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: object
                    properties:
                      activityId:
                        type: string
                        format: uuid
                    required:
                      - activityId
                required:
                  - statusCode
                  - message
                  - data
      security: *ref_4
      summary: TopicsController_postTopicCommentReply / Topicのコメントに返信
      tags: *ref_5
  /owners/{ownername}/projects/{project}/topics/{topicId}/timeline/reply/{replyId}:
    put:
      description: Topicのコメント返信を更新します
      operationId: TopicsController_updateTopicCommentReply
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
        - name: replyId
          required: true
          in: path
          description: TimelineReplyID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: コメントポスト
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  oneOf:
                    - oneOf:
                        - type: string
                        - type: number
                        - type: boolean
                        - {}
                    - type: array
                      items: {}
                    - type: object
                      additionalProperties: {}
              required:
                - content
            examples:
              default:
                value:
                  content:
                    type: doc
                    content:
                      - type: paragraph
                        content:
                          - type: text
                            text: これは返信です
      responses:
        '200':
          description: Topicのコメント返信更新に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_4
      summary: TopicsController_updateTopicCommentReply / Topicのコメント返信更新
      tags: *ref_5
    delete:
      description: Topicのコメント返信を削除します
      operationId: TopicsController_deleteTopicCommentReply
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: TopicID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
        - name: replyId
          required: true
          in: path
          description: TimelineReplyID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      responses:
        '200':
          description: Topicのコメント返信削除に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_4
      summary: TopicsController_deleteTopicCommentReply / Topicのコメント返信削除
      tags: *ref_5
  /owners/{ownername}/projects/{project}/topics/contexts:
    get:
      description: ProjectのContext一覧を取得します
      operationId: TopicsController_getTopicContextList
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
      responses:
        '200':
          description: ProjectのContext一覧取得に成功しました
          content:
            application/json:
              schema:
                description: プロジェクト内トピックコンテキスト一覧レスポンス
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        description:
                          type: string
                        type:
                          type: string
                        topicId:
                          type: string
                          format: uuid
                        opponentTopicId:
                          type: string
                          format: uuid
                      required:
                        - id
                        - name
                        - description
                        - type
                        - topicId
                        - opponentTopicId
                required:
                  - statusCode
                  - message
                  - data
      security: *ref_4
      summary: TopicsController_getTopicContextList / ProjectのContext一覧取得
      tags: *ref_5
  /owners/{ownername}/projects/{project}/topics/filtering-shortcuts:
    post:
      description: Topicのフィルタリングショートカットを作成します
      operationId: TopicsController_createFilteringShortcuts
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
      requestBody:
        required: true
        description: フィルタリングショートカットの情報
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: boolean
                description:
                  type: string
                  minLength: 1
                frameId:
                  type: string
                  format: uuid
                sort:
                  type: string
                state:
                  type: string
                tagIds:
                  type: array
                  items:
                    type: string
                    format: uuid
              required:
                - name
                - description
      responses:
        '200':
          description: Topicのフィルタリングショートカット作成に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_4
      summary: TopicsController_createFilteringShortcuts / Topicのフィルタリングショートカット作成
      tags: *ref_5
  /owners/{ownername}/projects/{project}/frames:
    post:
      description: Frameを新規作成します
      operationId: FramesController_createFrame
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
      requestBody:
        required: true
        description: Frameの情報
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                description:
                  type: string
                  minLength: 1
                icon:
                  type: string
                  minLength: 1
                attribute:
                  type: object
                  properties:
                    name:
                      type: string
                      minLength: 1
                    type:
                      type: string
                      enum:
                        - text
                        - number
                        - boolean
                        - date
                        - richText
                        - map
                        - list
                  required:
                    - name
                    - type
              required:
                - name
                - description
                - icon
                - attribute
      responses:
        '200':
          description: Frameの作成に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: object
                    properties:
                      frameId:
                        type: string
                        format: uuid
                    required:
                      - frameId
                required:
                  - statusCode
                  - message
                  - data
      security: &ref_6
        - supabase-auth: []
      summary: FramesController_createFrame / Frame新規作成
      tags: &ref_7
        - frames
  /owners/{ownername}/projects/{project}/frames/{frameId}:
    delete:
      description: Frameを削除します
      operationId: FramesController_deleteFrame
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: frameId
          required: true
          in: path
          description: Frame ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      responses:
        '200':
          description: Frameの削除に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_6
      summary: FramesController_deleteFrame / Frame削除
      tags: *ref_7
  /owners/{ownername}/projects/{project}/frames/{frameId}/description:
    put:
      description: Frameの説明を更新します
      operationId: FramesController_updateFrameDescription
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: frameId
          required: true
          in: path
          description: Frame ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: Frameの説明
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  minLength: 1
              required:
                - description
      responses:
        '200':
          description: Frameの説明の更新に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_6
      summary: FramesController_updateFrameDescription / Frame説明更新
      tags: *ref_7
  /owners/{ownername}/projects/{project}/frames/{frameId}/name:
    put:
      description: Frameの名前を更新します
      operationId: FramesController_updateFrameName
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: frameId
          required: true
          in: path
          description: Frame ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: Frameの名前
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
              required:
                - name
      responses:
        '200':
          description: Frameの名前の更新に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_6
      summary: FramesController_updateFrameName / Frame名前更新
      tags: *ref_7
  /owners/{ownername}/projects/{project}/frames/{frameId}/attributes:
    put:
      description: Frameの属性を更新します
      operationId: FramesController_updateFrameAttributes
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: frameId
          required: true
          in: path
          description: Frame ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: Frameの属性
        content:
          application/json:
            schema:
              type: object
              properties:
                attributes:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        minLength: 1
                      type:
                        type: string
                        enum:
                          - text
                          - number
                          - boolean
                          - date
                          - richText
                          - map
                          - list
                      id:
                        type: string
                        format: uuid
                      description:
                        type: string
                    required:
                      - name
                      - type
                      - id
              required:
                - attributes
      responses:
        '200':
          description: Frameの属性の更新に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_6
      summary: FramesController_updateFrameAttributes / Frame属性更新
      tags: *ref_7
  /owners/{ownername}/projects/{project}/frames/{frameId}/templates:
    post:
      description: Frameのテンプレートを作成します
      operationId: FramesController_createFrameTemplate
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: frameId
          required: true
          in: path
          description: Frame ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: Frameのテンプレート
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
              required:
                - name
      responses:
        '200':
          description: Frameのテンプレートの作成に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_6
      summary: FramesController_createFrameTemplate / Frameテンプレート作成
      tags: *ref_7
  /owners/{ownername}/projects/{project}/frames/{frameId}/templates/{templateId}:
    put:
      description: Frameのテンプレートを更新します
      operationId: FramesController_updateFrameTemplate
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: frameId
          required: true
          in: path
          description: Frame ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
        - name: templateId
          required: true
          in: path
          description: Template ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: Frameのテンプレート
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                content:
                  oneOf:
                    - oneOf:
                        - type: string
                        - type: number
                        - type: boolean
                        - {}
                    - type: array
                      items: {}
                    - type: object
                      additionalProperties: {}
              required:
                - name
                - content
            examples:
              default:
                value:
                  name: template
                  content:
                    type: doc
                    content: []
      responses:
        '200':
          description: Frameのテンプレートの更新に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_6
      summary: FramesController_updateFrameTemplate / Frameテンプレート更新
      tags: *ref_7
    delete:
      description: Frameのテンプレートを削除します
      operationId: FramesController_deleteFrameTemplate
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: frameId
          required: true
          in: path
          description: Frame ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
        - name: templateId
          required: true
          in: path
          description: Template ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      responses:
        '200':
          description: Frameのテンプレートの削除に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_6
      summary: FramesController_deleteFrameTemplate / Frameテンプレート削除
      tags: *ref_7
  /owners/{ownername}/projects/{project}/frames/{frameId}/timeline/comment:
    post:
      description: Frameのタイムラインコメントを作成します
      operationId: FramesController_createFrameTimelineComment
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: frameId
          required: true
          in: path
          description: Frame ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: Frameのタイムラインコメント
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  oneOf:
                    - oneOf:
                        - type: string
                        - type: number
                        - type: boolean
                        - {}
                    - type: array
                      items: {}
                    - type: object
                      additionalProperties: {}
              required:
                - content
      responses:
        '200':
          description: Frameのタイムラインコメントの作成に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_6
      summary: FramesController_createFrameTimelineComment / Frameタイムラインコメント作成
      tags: *ref_7
  /owners/{ownername}/projects/{project}/frames/{frameId}/timeline/comment/{activityId}:
    put:
      description: Frameのタイムラインコメントを更新します
      operationId: FramesController_updateFrameTimelineComment
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: frameId
          required: true
          in: path
          description: Frame ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
        - name: activityId
          required: true
          in: path
          description: Activity ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: Frameのタイムラインコメント
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  oneOf:
                    - oneOf:
                        - type: string
                        - type: number
                        - type: boolean
                        - {}
                    - type: array
                      items: {}
                    - type: object
                      additionalProperties: {}
              required:
                - content
            examples:
              default:
                value:
                  content:
                    type: doc
                    content: []
      responses:
        '200':
          description: Frameのタイムラインコメントの更新に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_6
      summary: FramesController_updateFrameTimelineComment / Frameタイムラインコメント更新
      tags: *ref_7
    delete:
      description: Frameのタイムラインコメントを削除します
      operationId: FramesController_deleteFrameTimelineComment
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: frameId
          required: true
          in: path
          description: Frame ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
        - name: activityId
          required: true
          in: path
          description: Activity ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      responses:
        '200':
          description: Frameのタイムラインコメントの削除に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_6
      summary: FramesController_deleteFrameTimelineComment / Frameタイムラインコメント削除
      tags: *ref_7
  /owners/{ownername}/projects/{project}/frames/{frameId}/timeline/reply:
    post:
      description: Frameのタイムライン返信を作成します
      operationId: FramesController_createFrameTimelineReply
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: frameId
          required: true
          in: path
          description: Frame ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: Frameのタイムライン返信
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  oneOf:
                    - oneOf:
                        - type: string
                        - type: number
                        - type: boolean
                        - {}
                    - type: array
                      items: {}
                    - type: object
                      additionalProperties: {}
              required:
                - content
            examples:
              default:
                value:
                  content:
                    type: doc
                    content: []
      responses:
        '200':
          description: Frameのタイムライン返信の作成に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_6
      summary: FramesController_createFrameTimelineReply / Frameタイムライン返信作成
      tags: *ref_7
  /owners/{ownername}/projects/{project}/frames/{frameId}/timeline/reply/{replyId}:
    put:
      description: Frameのタイムライン返信を更新します
      operationId: FramesController_updateFrameTimelineReply
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: frameId
          required: true
          in: path
          description: Frame ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
        - name: replyId
          required: true
          in: path
          description: Reply ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: Frameのタイムライン返信
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  oneOf:
                    - oneOf:
                        - type: string
                        - type: number
                        - type: boolean
                        - {}
                    - type: array
                      items: {}
                    - type: object
                      additionalProperties: {}
              required:
                - content
            examples:
              default:
                value:
                  content:
                    type: doc
                    content: []
      responses:
        '200':
          description: Frameのタイムライン返信の更新に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_6
      summary: FramesController_updateFrameTimelineReply / Frameタイムライン返信更新
      tags: *ref_7
    delete:
      description: Frameのタイムライン返信を削除します
      operationId: FramesController_deleteFrameTimelineReply
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: frameId
          required: true
          in: path
          description: Frame ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
        - name: replyId
          required: true
          in: path
          description: Reply ID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      responses:
        '200':
          description: Frameのタイムライン返信の削除に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_6
      summary: FramesController_deleteFrameTimelineReply / Frameタイムライン返信削除
      tags: *ref_7
  /owners/{ownername}/projects/{project}/agent/suggestions/{suggestionId}/feedback:
    put:
      description: 提案を更新します
      operationId: AgentsController_updateFeedback
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: suggestionId
          required: true
          in: path
          description: 提案のID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: フィードバック情報
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  enum:
                    - approved
                    - disapproved
                comment:
                  type: string
                reaction:
                  type: string
                  enum:
                    - good
                    - bad
              required:
                - state
      responses:
        '200':
          description: フィードバックの更新に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: object
                    properties:
                      suggestionId:
                        type: string
                        format: uuid
                    required:
                      - suggestionId
                required:
                  - statusCode
                  - message
                  - data
      security: &ref_8
        - supabase-auth: []
      summary: AgentsController_updateFeedback / 提案の更新
      tags: &ref_9
        - agent
  /owners/{ownername}/projects/{project}/agent/vector:
    post:
      description: vectorDBを更新します
      operationId: AgentsController_updateVector
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
      requestBody:
        required: true
        description: トピックの更新情報
        content:
          application/json:
            schema:
              type: object
              properties:
                updateTopicIds:
                  type: array
                  items:
                    type: string
                    format: uuid
              required:
                - updateTopicIds
      responses:
        '200':
          description: vectorDBの更新に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_8
      summary: AgentsController_updateVector / vectorDBの更新
      tags: *ref_9
  /owners/{ownername}/projects/{project}/agent/topics:
    get:
      description: トピック構築提案を発火させます
      operationId: AgentsController_triggerTopicSuggestion
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
      responses:
        '200':
          description: トピック構築提案の発火に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_8
      summary: AgentsController_triggerTopicSuggestion / トピック構築提案発火
      tags: *ref_9
    post:
      description: トピック構築提案の保存行います
      operationId: AgentsController_createTopicSuggestion
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
      requestBody:
        required: true
        description: トピック構築提案の情報
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  type: object
                  properties:
                    project_id:
                      type: string
                      format: uuid
                    agent_id:
                      type: string
                      format: uuid
                  required:
                    - project_id
                    - agent_id
                suggestion:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    type:
                      type: string
                    title:
                      type: string
                    accuracy:
                      type: number
                  required:
                    - id
                    - type
                    - title
                    - accuracy
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    frame_id:
                      type: string
                      format: uuid
                    title:
                      type: string
                    state:
                      type: string
                      enum:
                        - open
                        - closed
                    assignee:
                      type: string
                      format: uuid
                    reviewer:
                      type: string
                      format: uuid
                    participants:
                      type: array
                      items:
                        type: string
                        format: uuid
                    tags:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          color:
                            type: string
                        required:
                          - name
                          - color
                    attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          content:
                            oneOf:
                              - oneOf:
                                  - type: string
                                  - type: number
                                  - type: boolean
                                  - {}
                              - type: array
                                items: {}
                              - type: object
                                additionalProperties: {}
                        required:
                          - name
                          - content
                    document: {}
                    contexts:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          name:
                            type: string
                          description:
                            type: string
                          type:
                            type: string
                          opponent_topic_id:
                            type: string
                            format: uuid
                        required:
                          - name
                          - description
                          - type
                          - opponent_topic_id
                  required:
                    - frame_id
                    - title
                    - state
                    - assignee
                    - reviewer
                    - participants
                    - tags
                    - attributes
                    - document
                    - contexts
              required:
                - metadata
                - suggestion
                - data
            examples:
              default:
                value:
                  metadata:
                    project_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    agent_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  suggestion:
                    id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    type: A
                    title: これはタイトル
                    accuracy: 0.95
                  data:
                    id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    frame_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    title: これはタイトル
                    state: open
                    assignee: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    reviewer: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    participants:
                      - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    tags:
                      - name: tag1
                        color: '#ff0000'
                      - name: tag2
                        color: '#00ff00'
                    attributes:
                      - name: attribute1
                        content: content1
                      - name: attribute2
                        content: content2
                    document:
                      type: doc
                      content: []
                    contexts:
                      - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        name: context1
                        description: description1
                        type: type1
                        opponent_topic_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        name: context2
                        description: description2
                        type: type2
                        opponent_topic_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        '200':
          description: トピック構築提案の作成に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: object
                    properties:
                      topicId:
                        type: string
                        format: uuid
                      suggestionId:
                        type: string
                        format: uuid
                    required:
                      - topicId
                      - suggestionId
                required:
                  - statusCode
                  - message
                  - data
      security: *ref_8
      summary: AgentsController_createTopicSuggestion / トピック構築提案保存
      tags: *ref_9
  /owners/{ownername}/projects/{project}/agent/topics/{topicId}/timeline:
    get:
      description: 検討もれ提案を発火させます
      operationId: AgentsController_triggerChatSuggestion
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: トピックのID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      responses:
        '200':
          description: 検討もれ提案の発火に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                required:
                  - statusCode
                  - message
      security: *ref_8
      summary: AgentsController_triggerChatSuggestion / 検討もれ提案の発火
      tags: *ref_9
    post:
      description: 検討もれ提案の保存行います
      operationId: AgentsController_createChatSuggestion
      parameters:
        - name: ownername
          required: true
          in: path
          description: Owner名
          schema:
            example: user1
            type: string
        - name: project
          required: true
          in: path
          description: Project名
          schema:
            example: project1
            type: string
        - name: topicId
          required: true
          in: path
          description: トピックのID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        description: タイムライン内提案情報
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  type: object
                  properties:
                    request_type:
                      type: string
                    project_id:
                      type: string
                      format: uuid
                    agent_id:
                      type: string
                      format: uuid
                    activity_id:
                      type: string
                      format: uuid
                  required:
                    - request_type
                    - project_id
                    - agent_id
                    - activity_id
                suggestion:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    type:
                      type: string
                    title:
                      type: string
                    accuracy:
                      type: number
                  required:
                    - type
                    - title
                    - accuracy
                data:
                  oneOf:
                    - oneOf:
                        - type: string
                        - type: number
                        - type: boolean
                        - {}
                    - type: array
                      items: {}
                    - type: object
                      additionalProperties: {}
              required:
                - metadata
                - suggestion
                - data
            examples:
              default:
                value:
                  metadata:
                    request_type: string
                    project_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    agent_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    activity_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  suggestion:
                    id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    type: string
                    title: string
                    accuracy: 0
                  data:
                    id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    prop1: string
      responses:
        '200':
          description: 検討もれ提案の作成に成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    description: ステータスコード
                    type: number
                  message:
                    description: メッセージ
                    type: string
                  data:
                    type: object
                    properties:
                      activityId:
                        type: string
                        format: uuid
                      suggestionId:
                        type: string
                        format: uuid
                    required:
                      - activityId
                      - suggestionId
                required:
                  - statusCode
                  - message
                  - data
      security: *ref_8
      summary: AgentsController_createChatSuggestion / 検討もれ提案保存
      tags: *ref_9
info:
  title: andTopic API
  description: andTopic API description
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas: {}
